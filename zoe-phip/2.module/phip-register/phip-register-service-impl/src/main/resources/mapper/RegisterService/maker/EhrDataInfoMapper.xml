<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoe.phip.register.dao.IEhrDataInfoMapper">
    <resultMap id="BaseResultMap" type="com.zoe.phip.register.model.EhrDataInfo"
               extends="com.zoe.phip.module.service.MasterEntityResultMap">
        <result column="MSG_ID" property="msgId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="PATIENT_ID" property="patientId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="PATIENT_NAME" property="patientName" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="HEALTH_CARD_ID" property="healthCardId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ID_NO" property="idNo" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ORG_CODE" property="orgCode" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ORG_NAME" property="orgName" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="AREA_CODE" property="areaCode" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="TEL_NO" property="telNo" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="EMAIL_ADDRESS" property="emailAddress" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADDRESS_CITY" property="addressCity" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADDRESS_COUNTRY" property="addressCountry" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADDRESS_POSTAL" property="addressPostal" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADDRESS_STATE" property="addressState" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADDRESS_STREET" property="addressStreet" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="STREET_NUMBER" property="streetNumber" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="COMMIT_TIME" property="commitTime" javaType="java.sql.Date"
                jdbcType="DATE"/>
        <result column="UNIQUE_ID" property="uniqueId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="SOURCE_ID" property="sourceId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="COMMENTS" property="comments" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="TITLE" property="title" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="CREATE_TIME" property="createTime" javaType="java.sql.Date"
                jdbcType="DATE"/>
        <result column="SERVER_ORG_NAME" property="serverOrgName" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="EPISODE_ID" property="episodeId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="IN_TIME" property="inTime" javaType="java.sql.Date"
                jdbcType="DATE"/>
        <result column="OUT_TIME" property="outTime" javaType="java.sql.Date"
                jdbcType="DATE"/>
        <result column="ADMISSION_DEPART" property="admissionDepart" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADMISSION_DOCTOR" property="admissionDoctor" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="ADMISSION_TYPE" property="admissionType" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="DIAGNOSIS_RESULT" property="diagnosisResult" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="AUTHOR_NAME" property="authorName" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="AUTHOR_INSTITUTION" property="authorInstitution" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="AUTHOR_SPECIALTY" property="authorSpecialty" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="AUTHOR_ROLE" property="authorRole" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="DOCUMENT_ID" property="documentId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="PARENT_DOCUMENT_RELATIONSHIP" property="parentDocumentRelationship" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="PARENT_DOCUMENT_ID" property="parentDocumentId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="CONTENT" property="content" javaType="java.sql.Clob"
                jdbcType="CLOB"/>
        <result column="RESPONSE_ID" property="responseId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="DOCUMENT_UNIQUE_ID" property="documentUniqueId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="REPOSITORY_UNIQUE_ID" property="repositoryUniqueId" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="DOUMENT_URL" property="doumentUrl" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="MIME_TYPE" property="mimeType" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
        <result column="EVENT_NO" property="eventNo" javaType="java.lang.String"
                jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="addList" parameterType="java.util.List">
        INSERT INTO PHIP_EHR_DATA_INFO (
        MSG_ID,
        PATIENT_ID,
        PATIENT_NAME,
        HEALTH_CARD_ID,
        ID_NO,
        ORG_CODE,
        ORG_NAME,
        AREA_CODE,
        TEL_NO,
        EMAIL_ADDRESS,
        ADDRESS_CITY,
        ADDRESS_COUNTRY,
        ADDRESS_POSTAL,
        ADDRESS_STATE,
        ADDRESS_STREET,
        STREET_NUMBER,
        COMMIT_TIME,
        UNIQUE_ID,
        SOURCE_ID,
        COMMENTS,
        TITLE,
        CREATE_TIME,
        SERVER_ORG_NAME,
        EPISODE_ID,
        IN_TIME,
        OUT_TIME,
        ADMISSION_DEPART,
        ADMISSION_DOCTOR,
        ADMISSION_TYPE,
        DIAGNOSIS_RESULT,
        AUTHOR_NAME,
        AUTHOR_INSTITUTION,
        AUTHOR_SPECIALTY,
        AUTHOR_ROLE,
        DOCUMENT_ID,
        PARENT_DOCUMENT_RELATIONSHIP,
        PARENT_DOCUMENT_ID,
        CONTENT,
        RESPONSE_ID,
        DOCUMENT_UNIQUE_ID,
        REPOSITORY_UNIQUE_ID,
        DOUMENT_URL,
        MIME_TYPE,
        EVENT_NO,
        <include refid="com.zoe.phip.module.service.baseMasterEntityInsert"/>)
        <foreach collection="list" item="item" index="index" close="" open="" separator="union all">
            SELECT
            #{item.msgId,jdbcType=VARCHAR},
            #{item.patientId,jdbcType=VARCHAR},
            #{item.patientName,jdbcType=VARCHAR},
            #{item.healthCardId,jdbcType=VARCHAR},
            #{item.idNo,jdbcType=VARCHAR},
            #{item.orgCode,jdbcType=VARCHAR},
            #{item.orgName,jdbcType=VARCHAR},
            #{item.areaCode,jdbcType=VARCHAR},
            #{item.telNo,jdbcType=VARCHAR},
            #{item.emailAddress,jdbcType=VARCHAR},
            #{item.addressCity,jdbcType=VARCHAR},
            #{item.addressCountry,jdbcType=VARCHAR},
            #{item.addressPostal,jdbcType=VARCHAR},
            #{item.addressState,jdbcType=VARCHAR},
            #{item.addressStreet,jdbcType=VARCHAR},
            #{item.streetNumber,jdbcType=VARCHAR},
            #{item.commitTime,jdbcType=DATE},
            #{item.uniqueId,jdbcType=VARCHAR},
            #{item.sourceId,jdbcType=VARCHAR},
            #{item.comments,jdbcType=VARCHAR},
            #{item.title,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=DATE},
            #{item.serverOrgName,jdbcType=VARCHAR},
            #{item.episodeId,jdbcType=VARCHAR},
            #{item.inTime,jdbcType=DATE},
            #{item.outTime,jdbcType=DATE},
            #{item.admissionDepart,jdbcType=VARCHAR},
            #{item.admissionDoctor,jdbcType=VARCHAR},
            #{item.admissionType,jdbcType=VARCHAR},
            #{item.diagnosisResult,jdbcType=VARCHAR},
            #{item.authorName,jdbcType=VARCHAR},
            #{item.authorInstitution,jdbcType=VARCHAR},
            #{item.authorSpecialty,jdbcType=VARCHAR},
            #{item.authorRole,jdbcType=VARCHAR},
            #{item.documentId,jdbcType=VARCHAR},
            #{item.parentDocumentRelationship,jdbcType=VARCHAR},
            #{item.parentDocumentId,jdbcType=VARCHAR},
            #{item.content,jdbcType=CLOB},
            #{item.responseId,jdbcType=VARCHAR},
            #{item.documentUniqueId,jdbcType=VARCHAR},
            #{item.repositoryUniqueId,jdbcType=VARCHAR},
            #{item.doumentUrl,jdbcType=VARCHAR},
            #{item.mimeType,jdbcType=VARCHAR},
            #{item.eventNo,jdbcType=VARCHAR},
            <include refid="com.zoe.phip.module.service.baseMasterEntitySelect"/>
            FROM DUAL
        </foreach>
    </insert>
    <insert id="defaultAdd" parameterType="com.zoe.phip.register.model.EhrDataInfo">
        INSERT INTO PHIP_EHR_DATA_INFO (
        MSG_ID,
        PATIENT_ID,
        PATIENT_NAME,
        HEALTH_CARD_ID,
        ID_NO,
        ORG_CODE,
        ORG_NAME,
        AREA_CODE,
        TEL_NO,
        EMAIL_ADDRESS,
        ADDRESS_CITY,
        ADDRESS_COUNTRY,
        ADDRESS_POSTAL,
        ADDRESS_STATE,
        ADDRESS_STREET,
        STREET_NUMBER,
        COMMIT_TIME,
        UNIQUE_ID,
        SOURCE_ID,
        COMMENTS,
        TITLE,
        CREATE_TIME,
        SERVER_ORG_NAME,
        EPISODE_ID,
        IN_TIME,
        OUT_TIME,
        ADMISSION_DEPART,
        ADMISSION_DOCTOR,
        ADMISSION_TYPE,
        DIAGNOSIS_RESULT,
        AUTHOR_NAME,
        AUTHOR_INSTITUTION,
        AUTHOR_SPECIALTY,
        AUTHOR_ROLE,
        DOCUMENT_ID,
        PARENT_DOCUMENT_RELATIONSHIP,
        PARENT_DOCUMENT_ID,
        CONTENT,
        RESPONSE_ID,
        DOCUMENT_UNIQUE_ID,
        REPOSITORY_UNIQUE_ID,
        DOUMENT_URL,
        MIME_TYPE,
        EVENT_NO,
        <include refid="com.zoe.phip.module.service.baseMasterEntityInsert"/>)
        VALUES(
        #{msgId,jdbcType=VARCHAR},
        #{patientId,jdbcType=VARCHAR},
        #{patientName,jdbcType=VARCHAR},
        #{healthCardId,jdbcType=VARCHAR},
        #{idNo,jdbcType=VARCHAR},
        #{orgCode,jdbcType=VARCHAR},
        #{orgName,jdbcType=VARCHAR},
        #{areaCode,jdbcType=VARCHAR},
        #{telNo,jdbcType=VARCHAR},
        #{emailAddress,jdbcType=VARCHAR},
        #{addressCity,jdbcType=VARCHAR},
        #{addressCountry,jdbcType=VARCHAR},
        #{addressPostal,jdbcType=VARCHAR},
        #{addressState,jdbcType=VARCHAR},
        #{addressStreet,jdbcType=VARCHAR},
        #{streetNumber,jdbcType=VARCHAR},
        #{commitTime,jdbcType=DATE},
        #{uniqueId,jdbcType=VARCHAR},
        #{sourceId,jdbcType=VARCHAR},
        #{comments,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR},
        #{createTime,jdbcType=DATE},
        #{serverOrgName,jdbcType=VARCHAR},
        #{episodeId,jdbcType=VARCHAR},
        #{inTime,jdbcType=DATE},
        #{outTime,jdbcType=DATE},
        #{admissionDepart,jdbcType=VARCHAR},
        #{admissionDoctor,jdbcType=VARCHAR},
        #{admissionType,jdbcType=VARCHAR},
        #{diagnosisResult,jdbcType=VARCHAR},
        #{authorName,jdbcType=VARCHAR},
        #{authorInstitution,jdbcType=VARCHAR},
        #{authorSpecialty,jdbcType=VARCHAR},
        #{authorRole,jdbcType=VARCHAR},
        #{documentId,jdbcType=VARCHAR},
        #{parentDocumentRelationship,jdbcType=VARCHAR},
        #{parentDocumentId,jdbcType=VARCHAR},
        #{content,jdbcType=CLOB},
        #{responseId,jdbcType=VARCHAR},
        #{documentUniqueId,jdbcType=VARCHAR},
        #{repositoryUniqueId,jdbcType=VARCHAR},
        #{doumentUrl,jdbcType=VARCHAR},
        #{mimeType,jdbcType=VARCHAR},
        #{eventNo,jdbcType=VARCHAR},
        <include refid="com.zoe.phip.module.service.baseMasterEntitySelectDefault"/>
        )
    </insert>
    <delete id="deleteByIds" parameterType="java.lang.String">
        delete from PHIP_EHR_DATA_INFO where ID in
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteByList" parameterType="java.util.List">
        delete from PHIP_EHR_DATA_INFO where ID in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item.id}
        </foreach>
    </delete>
    <update id="updateList" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close="end;" separator="">
            update PHIP_EHR_DATA_INFO
            <set>
                <if test="item.msgId != null">
                    MSG_ID = #{item.msgId,jdbcType=VARCHAR},
                </if>
                <if test="item.patientId != null">
                    PATIENT_ID = #{item.patientId,jdbcType=VARCHAR},
                </if>
                <if test="item.patientName != null">
                    PATIENT_NAME = #{item.patientName,jdbcType=VARCHAR},
                </if>
                <if test="item.healthCardId != null">
                    HEALTH_CARD_ID = #{item.healthCardId,jdbcType=VARCHAR},
                </if>
                <if test="item.idNo != null">
                    ID_NO = #{item.idNo,jdbcType=VARCHAR},
                </if>
                <if test="item.orgCode != null">
                    ORG_CODE = #{item.orgCode,jdbcType=VARCHAR},
                </if>
                <if test="item.orgName != null">
                    ORG_NAME = #{item.orgName,jdbcType=VARCHAR},
                </if>
                <if test="item.areaCode != null">
                    AREA_CODE = #{item.areaCode,jdbcType=VARCHAR},
                </if>
                <if test="item.telNo != null">
                    TEL_NO = #{item.telNo,jdbcType=VARCHAR},
                </if>
                <if test="item.emailAddress != null">
                    EMAIL_ADDRESS = #{item.emailAddress,jdbcType=VARCHAR},
                </if>
                <if test="item.addressCity != null">
                    ADDRESS_CITY = #{item.addressCity,jdbcType=VARCHAR},
                </if>
                <if test="item.addressCountry != null">
                    ADDRESS_COUNTRY = #{item.addressCountry,jdbcType=VARCHAR},
                </if>
                <if test="item.addressPostal != null">
                    ADDRESS_POSTAL = #{item.addressPostal,jdbcType=VARCHAR},
                </if>
                <if test="item.addressState != null">
                    ADDRESS_STATE = #{item.addressState,jdbcType=VARCHAR},
                </if>
                <if test="item.addressStreet != null">
                    ADDRESS_STREET = #{item.addressStreet,jdbcType=VARCHAR},
                </if>
                <if test="item.streetNumber != null">
                    STREET_NUMBER = #{item.streetNumber,jdbcType=VARCHAR},
                </if>
                <if test="item.commitTime != null">
                    COMMIT_TIME = #{item.commitTime,jdbcType=DATE},
                </if>
                <if test="item.uniqueId != null">
                    UNIQUE_ID = #{item.uniqueId,jdbcType=VARCHAR},
                </if>
                <if test="item.sourceId != null">
                    SOURCE_ID = #{item.sourceId,jdbcType=VARCHAR},
                </if>
                <if test="item.comments != null">
                    COMMENTS = #{item.comments,jdbcType=VARCHAR},
                </if>
                <if test="item.title != null">
                    TITLE = #{item.title,jdbcType=VARCHAR},
                </if>
                <if test="item.createTime != null">
                    CREATE_TIME = #{item.createTime,jdbcType=DATE},
                </if>
                <if test="item.serverOrgName != null">
                    SERVER_ORG_NAME = #{item.serverOrgName,jdbcType=VARCHAR},
                </if>
                <if test="item.episodeId != null">
                    EPISODE_ID = #{item.episodeId,jdbcType=VARCHAR},
                </if>
                <if test="item.inTime != null">
                    IN_TIME = #{item.inTime,jdbcType=DATE},
                </if>
                <if test="item.outTime != null">
                    OUT_TIME = #{item.outTime,jdbcType=DATE},
                </if>
                <if test="item.admissionDepart != null">
                    ADMISSION_DEPART = #{item.admissionDepart,jdbcType=VARCHAR},
                </if>
                <if test="item.admissionDoctor != null">
                    ADMISSION_DOCTOR = #{item.admissionDoctor,jdbcType=VARCHAR},
                </if>
                <if test="item.admissionType != null">
                    ADMISSION_TYPE = #{item.admissionType,jdbcType=VARCHAR},
                </if>
                <if test="item.diagnosisResult != null">
                    DIAGNOSIS_RESULT = #{item.diagnosisResult,jdbcType=VARCHAR},
                </if>
                <if test="item.authorName != null">
                    AUTHOR_NAME = #{item.authorName,jdbcType=VARCHAR},
                </if>
                <if test="item.authorInstitution != null">
                    AUTHOR_INSTITUTION = #{item.authorInstitution,jdbcType=VARCHAR},
                </if>
                <if test="item.authorSpecialty != null">
                    AUTHOR_SPECIALTY = #{item.authorSpecialty,jdbcType=VARCHAR},
                </if>
                <if test="item.authorRole != null">
                    AUTHOR_ROLE = #{item.authorRole,jdbcType=VARCHAR},
                </if>
                <if test="item.documentId != null">
                    DOCUMENT_ID = #{item.documentId,jdbcType=VARCHAR},
                </if>
                <if test="item.parentDocumentRelationship != null">
                    PARENT_DOCUMENT_RELATIONSHIP = #{item.parentDocumentRelationship,jdbcType=VARCHAR},
                </if>
                <if test="item.parentDocumentId != null">
                    PARENT_DOCUMENT_ID = #{item.parentDocumentId,jdbcType=VARCHAR},
                </if>
                <if test="item.content != null">
                    CONTENT = #{item.content,jdbcType=CLOB},
                </if>
                <if test="item.responseId != null">
                    RESPONSE_ID = #{item.responseId,jdbcType=VARCHAR},
                </if>
                <if test="item.documentUniqueId != null">
                    DOCUMENT_UNIQUE_ID = #{item.documentUniqueId,jdbcType=VARCHAR},
                </if>
                <if test="item.repositoryUniqueId != null">
                    REPOSITORY_UNIQUE_ID = #{item.repositoryUniqueId,jdbcType=VARCHAR},
                </if>
                <if test="item.doumentUrl != null">
                    DOUMENT_URL = #{item.doumentUrl,jdbcType=VARCHAR},
                </if>
                <if test="item.mimeType != null">
                    MIME_TYPE = #{item.mimeType,jdbcType=VARCHAR},
                </if>
                <if test="item.eventNo != null">
                    EVENT_NO = #{item.eventNo,jdbcType=VARCHAR},
                </if>
                MODIFY_AT=sysdate
            </set>
            where id = #{item.id};
        </foreach>
    </update>

</mapper>