<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoe.phip.register.dao.IDictItemMapper">
    <resultMap id="MultiResultMap" type="com.zoe.phip.register.model.DictItem" extends="BaseResultMap">
        <result column="CATALOG_NAME" property="fkCatalogName" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>
    <update id="defaultUpdate" parameterType="com.zoe.phip.register.model.DictItem">
        update PHIP_DICT_ITEM
        <set>
            <if test="code != null">
                CODE = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="fkCatalogCode != null">
                FK_CATALOG_CODE = #{fkCatalogCode,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                STATE = #{state,jdbcType=DECIMAL},
            </if>
            MODIFY_AT=sysdate
        </set>
        where id = #{id}
    </update>

    <select id="getDictItemList" resultMap="MultiResultMap" parameterType="java.util.Map">
        SELECT pdi.*,pdc.NAME CATALOG_NAME FROM(
        SELECT pdi.* FROM PHIP_DICT_ITEM pdi
        <where>
            <if test="parentCatalogCode !=null and parentCatalogCode !=''">
                AND pdi.FK_CATALOG_CODE = #{parentCatalogCode,jdbcType=VARCHAR}
            </if>
            <if test="key !=null and key !=''">
                AND (UPPER(pdi.NAME) LIKE #{key,jdbcType=VARCHAR} OR UPPER(pdi.CODE) LIKE #{key,jdbcType=VARCHAR})
            </if>
            <include refid="com.zoe.phip.module.service.selfWhere"/>
        </where>
        ) pdi
        LEFT JOIN PHIP_DICT_CATALOG pdc
        ON pdi.FK_CATALOG_CODE = pdc.CODE
    </select>
</mapper>