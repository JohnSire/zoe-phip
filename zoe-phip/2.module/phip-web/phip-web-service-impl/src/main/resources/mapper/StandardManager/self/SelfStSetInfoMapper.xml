<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zoe.phip.web.dao.sdm.IStSetInfoMapper">
    <resultMap id="MultiResultMap" type="com.zoe.phip.web.model.sdm.StSetInfo" extends="BaseResultMap">
        <result column="SOURCE_NAME" property="sourceName" javaType="java.lang.String" jdbcType="VARCHAR"></result>
    </resultMap>
    <update id="defaultUpdate" parameterType="com.zoe.phip.web.model.sdm.StSetInfo">
        update PHIP_ST_SET_INFO
        <set>
            <if test="code != null">
                CODE = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                PID = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                ALIAS = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="fkNormSourceId != null">
                FK_NORM_SOURCE_ID = #{fkNormSourceId,jdbcType=VARCHAR},
            </if>
            <if test="xpath != null">
                XPATH = #{xpath,jdbcType=VARCHAR},
            </if>
            <if test="bussTimeFieldId != null">
                BUSS_TIME_FIELD_ID = #{bussTimeFieldId,jdbcType=VARCHAR},
            </if>
            <if test="version != null">
                VERSION = #{version,jdbcType=DECIMAL},
            </if>
            <if test="descr != null">
                DESCR = #{descr,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                STATE = #{state,jdbcType=DECIMAL},
            </if>
            <if test="updateTimeFiledId != null">
                UPDATE_TIME_FIELD_ID = #{updateTimeFiledId,jdbcType=VARCHAR},
            </if>
            MODIFY_AT=sysdate
        </set>
        where id = #{id}
    </update>
    <select id="getDataPageList" parameterType="java.util.Map" resultMap="MultiResultMap">
        SELECT PSSI.*, PSNSI.NAME SOURCE_NAME
        FROM PHIP_ST_SET_INFO PSSI
        LEFT JOIN PHIP_ST_NORM_SOURCE_INFO PSNSI
        ON PSSI.FK_NORM_SOURCE_ID = PSNSI.ID
        WHERE 1 = 1
        <if test="_parameter.containsKey('key')">
            AND UPPER(CONCAT(PSSI.CODE,PSSI.NAME)) LIKE UPPER (#{key, jdbcType=VARCHAR})
        </if>
        <if test="_parameter.containsKey('fkSourceId')">
            AND PSSI.FK_SOURCE_ID = (#{fkSourceId, jdbcType=VARCHAR})
        </if>
    </select>
    <select id="getByCdaId" parameterType="java.util.Map" resultMap="MultiResultMap">
        SELECT PSSI.*, PSNSI.NAME SOURCE_NAME
        FROM PHIP_ST_SET_INFO PSSI
        INNER JOIN PHIP_ST_RS_CDA_SET_INFO RCSI
        ON PSSI.ID = RCSI.FK_SET_ID
        LEFT JOIN PHIP_ST_NORM_SOURCE_INFO PSNSI
        ON PSSI.FK_NORM_SOURCE_ID = PSNSI.ID
        WHERE RCSI.FK_CDA_ID = (#{fkCdaId, jdbcType=VARCHAR})
        <if test="_parameter.containsKey('key')">
            AND UPPER(CONCAT(PSSI.CODE,PSSI.NAME)) LIKE UPPER (#{key, jdbcType=VARCHAR})
        </if>
        <if test="_parameter.containsKey('fkSourceId')">
            AND PSSI.FK_SOURCE_ID = (#{fkSourceId, jdbcType=VARCHAR})
        </if>
    </select>

    <select id="getSingle" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT (1) from PHIP_ST_SET_INFO PSSI
        WHERE UPPER (PSSI.CODE) = UPPER (#{code, jdbcType=VARCHAR})
        <if test="_parameter.containsKey('id')">
            and PSSI.id != #{id, jdbcType=VARCHAR}
        </if>
    </select>

    <select id="getBySetCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT PSSI.* from PHIP_ST_SET_INFO PSSI
        WHERE UPPER (PSSI.CODE) = UPPER (#{code, jdbcType=VARCHAR})
    </select>

    <select id="getByPid" parameterType="java.lang.String" resultMap="MultiResultMap">
        SELECT PSSI.*, PSNSI.NAME SOURCE_NAME
        FROM PHIP_ST_SET_INFO PSSI
        LEFT JOIN PHIP_ST_NORM_SOURCE_INFO PSNSI
        ON PSSI.FK_NORM_SOURCE_ID = PSNSI.ID
        where 1=1
        <if test="_parameter.containsKey('key')">
            AND UPPER(CONCAT(PSSI.CODE,PSSI.NAME)) LIKE UPPER (#{key, jdbcType=VARCHAR})
        </if>
        <if test="_parameter.containsKey('pid')">
           and  PSSI.PID =   #{pid, jdbcType=VARCHAR}
        </if>
    </select>

    <select id="getDictId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT ID from PHIP_DICT_CATALOG PDC
        WHERE UPPER (PDC.CODE) = UPPER (#{code, jdbcType=VARCHAR})
    </select>

    <select id="getRelationById" parameterType="java.util.Map" resultMap="MultiResultMap">
        SELECT PSSI.*, PSNSI.NAME SOURCE_NAME,P.NAME pName,PSRSEI.NAME BUSS_TIME_NAME,B.NAME UPDATE_TIME_NAME
        FROM PHIP_ST_SET_INFO PSSI
        LEFT JOIN PHIP_ST_NORM_SOURCE_INFO PSNSI
        ON PSSI.FK_NORM_SOURCE_ID = PSNSI.ID
        left join PHIP_ST_SET_INFO P
        on PSSI.PID=P.ID
        left join PHIP_ST_RS_SET_ELEMENT_INFO PSRSEI
        on PSSI.BUSS_TIME_FIELD_ID=PSRSEI.ID
        left join PHIP_ST_RS_SET_ELEMENT_INFO B
        on PSSI.UPDATE_TIME_FIELD_ID=B.ID
        WHERE PSSI.id =   #{id, jdbcType=VARCHAR}
    </select>

</mapper>